{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"php-",
				"php-getset	Create getter and setter methods"
			],
			[
				"ma",
				"margin	margin-left: length"
			],
			[
				"r",
				"right"
			],
			[
				"padd",
				"padding	padding: all"
			],
			[
				"de",
				"text-decoration"
			],
			[
				"le",
				"left"
			]
		]
	},
	"buffers":
	[
		{
			"file": "userfiles/modules/shop/checkout/index.php",
			"settings":
			{
				"buffer_size": 1161,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<? $payment_options =  payment_options();  ?>\n<? if(isarr($payment_options)) :?>\n<script  type=\"text/javascript\">\n$(document).ready(function(){\n \n \n $('.mw-payment-gateway-<? print $params['id']; ?>').unbind('change');\n  $('.mw-payment-gateway-<? print $params['id']; ?>').bind('change',function() {\n\n	 $v = $(this).val();\n\n	 \n	 mw.$('.mw-payment-gateway-selected-<? print $params['id']; ?> .module:first').attr('data-selected-gw',$v);\n\n\n\n\n	 mw.load_module('shop/payments/gateways/'+$v,'#mw-payment-gateway-selected-<? print $params['id']; ?>');\n\n\n\n\n		 \n	 });\n \n \n});\n</script>\n\n<h3>Payment method</h3>\n<select name=\"payment_gw\" class=\"mw-payment-gateway mw-payment-gateway-<? print $params['id']; ?>\">\n  <? foreach ($payment_options as $item) : ?>\n  <option value=\"<? print  $item['gw_file']; ?>\"><? print  $item['title']; ?></option>\n  <? endforeach; ?>\n</select>\n<div id=\"mw-payment-gateway-selected-<? print $params['id']; ?>\">\n  <module type=\"shop/payments/gateways/<? print $payment_options[0]['gw_file'] ?>\"  />\n</div>\n<? endif;?>\n",
			"file": "userfiles/modules/shop/payments/index.php",
			"file_size": 1077,
			"file_write_time": 129972005877458821,
			"settings":
			{
				"buffer_size": 1038,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\nif (!defined(\"MW_DB_TABLE_OPTIONS\")) {\n	define('MW_DB_TABLE_OPTIONS', MW_TABLE_PREFIX . 'options');\n}\n\naction_hook('mw_db_init_options', 'mw_options_init_db');\n\nfunction mw_options_init_db() {\n	$function_cache_id = false;\n\n	$args = func_get_args();\n\n	foreach ($args as $k => $v) {\n\n		$function_cache_id = $function_cache_id . serialize($k) . serialize($v);\n	}\n\n	$function_cache_id = __FUNCTION__ . crc32($function_cache_id);\n\n	$cache_content = cache_get_content($function_cache_id, 'db');\n\n	if (($cache_content) != false) {\n\n		return $cache_content;\n	}\n\n	$table_name = MW_DB_TABLE_OPTIONS;\n\n	$fields_to_add = array();\n\n	$fields_to_add[] = array('updated_on', 'datetime default NULL');\n	$fields_to_add[] = array('created_on', 'datetime default NULL');\n\n	$fields_to_add[] = array('option_key', 'TEXT default NULL');\n	$fields_to_add[] = array('option_value', 'longtext default NULL');\n	$fields_to_add[] = array('option_key2', 'TEXT default NULL');\n	$fields_to_add[] = array('option_value2', 'longtext default NULL');\n	$fields_to_add[] = array('position', 'int(11) default NULL');\n\n	$fields_to_add[] = array('option_group', 'TEXT default NULL');\n	$fields_to_add[] = array('name', 'TEXT default NULL');\n	$fields_to_add[] = array('help', 'TEXT default NULL');\n	$fields_to_add[] = array('field_type', 'TEXT default NULL');\n	$fields_to_add[] = array('field_values', 'TEXT default NULL');\n\n	$fields_to_add[] = array('module', 'TEXT default NULL');\n\n	set_db_table($table_name, $fields_to_add);\n\n	//db_add_table_index('option_group', $table_name, array('option_group'), \"FULLTEXT\");\n	//db_add_table_index('option_key', $table_name, array('option_key'), \"FULLTEXT\");\n\n	cache_store_data(true, $function_cache_id, $cache_group = 'db');\n	// $fields = (array_change_key_case ( $fields, CASE_LOWER ));\n	return true;\n\n	//print '<li'.$cls.'><a href=\"'.admin_url().'view:settings\">newsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl etenewsl eter</a></li>';\n}\n\naction_hook('mw_db_init_options', 'create_mw_default_options');\nfunction create_mw_default_options() {\n\n	$function_cache_id = __FUNCTION__;\n\n	$cache_content = cache_get_content($function_cache_id, $cache_group = 'db');\n	if (($cache_content) == '--true--') {\n		return true;\n	}\n\n	$table = MW_DB_TABLE_OPTIONS;\n\n	mw_var('FORCE_SAVE', $table);\n	$datas = array();\n\n	$data = array();\n\n	$data['name'] = 'Website name';\n	$data['help'] = 'This is very important for the search engines. Your website will be categorized by many criterias and the name is one of it.';\n	$data['option_group'] = 'website';\n	$data['option_key'] = 'website_title';\n	$data['option_value'] = 'My website';\n	$data['field_type'] = 'text';\n\n	$data['position'] = '1';\n	$datas[] = $data;\n\n	$data = array();\n	$data['option_group'] = 'website';\n	$data['option_key'] = 'website_description';\n	$data['option_value'] = 'My website\\'s description';\n	$data['name'] = 'Website description';\n	$data['help'] = 'Describe what is your website is about.';\n	$data['field_type'] = 'textarea';\n\n	$data['position'] = '2';\n	$datas[] = $data;\n\n	$data = array();\n\n	$data['name'] = 'Website template';\n	$data['help'] = 'This is your current template. You can easy change it anytime.';\n\n	$data['option_group'] = 'website';\n	$data['option_key'] = 'curent_template';\n	$data['option_value'] = 'default';\n	$data['field_type'] = 'website_template';\n	$data['position'] = '3';\n	$datas[] = $data;\n\n	$data = array();\n	$data['name'] = 'Items per page';\n	$data['help'] = 'Select how many items you want to have per page? example 10,25,50...';\n\n	$data['option_group'] = 'website';\n	$data['option_key'] = 'items_per_page';\n	$data['option_value'] = '30';\n	$data['field_type'] = 'dropdown';\n	$data['field_values'] = array('10' => '10', '30' => '30', '50' => '50', '100' => '100', '200' => '200');\n	$data['position'] = '4';\n	$datas[] = $data;\n\n	$data = array();\n	$data['option_group'] = 'users';\n	$data['option_key'] = 'enable_user_registration';\n	$data['name'] = 'Enable user registration';\n	$data['help'] = 'You can enable or disable the regitration for new users';\n	$data['option_value'] = 'y';\n	$data['position'] = '3';\n	$data['field_type'] = 'dropdown';\n	$data['field_values'] = array('y' => 'yes', 'n' => 'no');\n\n	$datas[] = $data;\n	$changes = false;\n	foreach ($datas as $value) {\n		$ch = set_default_option($value);\n		if ($ch == true) {\n			$changes = true;\n		}\n	}\n	if ($changes == true) {\n		//var_dump($changes);\n		cache_clean_group('options/global');\n	}\n	cache_store_data('--true--', $function_cache_id, $cache_group = 'db');\n\n	return true;\n}\n\nfunction module_option($key, $module, $option_group = false, $return_full = false, $orderby = false) {\n	return get_option($key, $option_group, $return_full, $orderby, $module);\n}\n\nfunction get_option($key, $option_group = false, $return_full = false, $orderby = false, $module = false) {\n	if (MW_IS_INSTALLED != true) {\n		return false;\n	}\n	if ($option_group != false) {\n\n		$cache_group = 'options/' . $option_group;\n\n	} else {\n		$cache_group = 'options/global';\n	}\n\n	//d($key);\n	$function_cache_id = false;\n\n	$args = func_get_args();\n\n	foreach ($args as $k => $v) {\n\n		$function_cache_id = $function_cache_id . serialize($k) . serialize($v);\n	}\n\n	$function_cache_id = __FUNCTION__ . crc32($function_cache_id);\n\n	$cache_content = cache_get_content($function_cache_id, $cache_group);\n	if (($cache_content) == '--false--') {\n		return false;\n	}\n	// $cache_content = false;\n	if (($cache_content) != false) {\n\n		return $cache_content;\n	}\n\n	// ->'table_options';\n	$table = MW_DB_TABLE_OPTIONS;\n\n	if ($orderby == false) {\n\n		$orderby[0] = 'position';\n\n		$orderby[1] = 'ASC';\n	}\n\n	$data = array();\n	//   $data ['debug'] = 1;\n	if (is_array($key)) {\n		$data = $key;\n	} else {\n		$data['option_key'] = $key;\n	}\n	//   $cache_group = 'options/global/' . $function_cache_id;\n	$ok1 = '';\n	$ok2 = '';\n	if ($option_group != false) {\n		$option_group = db_escape_string($option_group);\n		$ok1 = \" AND option_group='{$option_group}' \";\n	}\n\n	if ($module != false) {\n		$module = db_escape_string($module);\n		$data['module'] = $module;\n		$ok1 = \" AND module='{$module}' \";\n	}\n	$data['limit'] = 1;\n	// $get = db_get($table, $data, $cache_group);\n	$ok = db_escape_string($data['option_key']);\n	if ($return_full == true) {\n		$q = \"select * from $table where option_key='{$ok}' {$ok1} {$ok2} limit 1 \";\n	} else {\n		$q = \"select option_value from $table where option_key='{$ok}' {$ok1} {$ok2} limit 1 \";\n\n	}\n	$function_cache_id_q = __FUNCTION__ . crc32($q . $function_cache_id);\n	//\n\n	$get = db_query($q, $function_cache_id_q, $cache_group);\n	//d($get);\n\n	if (!empty($get)) {\n\n		if ($return_full == false) {\n\n			$get = $get[0]['option_value'];\n\n			return $get;\n		} else {\n\n			$get = $get[0];\n\n			if (isset($get['field_values']) and $get['field_values'] != false) {\n				$get['field_values'] = unserialize(base64_decode($get['field_values']));\n			}\n\n			return $get;\n		}\n	} else {\n		cache_store_data('--false--', $function_cache_id, $cache_group);\n\n		return FALSE;\n	}\n}\n\n\n \n\nfunction set_default_option($data) {\n	$changes = false;\n	if (is_array($data)) {\n		if (!isset($data['option_group'])) {\n			$data['option_group'] = 'other';\n		}\n\n		if (isset($data['option_key'])) {\n			$check = get_option($data['option_key'], $option_group = $data['option_group'], $return_full = false, $orderby = false);\n			if ($check == false) {\n				save_option($data);\n			}\n		}\n	} else {\n		error('set_default_option $data param must be array');\n	}\n	return $changes;\n}\n\nfunction get_option_by_id($id) {\n	$id = intval($id);\n	if ($id == 0) {\n		return false;\n	}\n	$table = MW_DB_TABLE_OPTIONS;\n\n	$q = \"select * from $table where id={$id} limit 1 \";\n	$function_cache_id = __FUNCTION__ . crc32($q);\n	$res1 = false;\n	$res = db_query($q, $cache_id = $function_cache_id, $cache_group = 'options/' . $id);\n	if (is_array($res) and !empty($res)) {\n		return $res[0];\n	}\n\n}\n\nfunction get_option_groups() {\n\n	$table = MW_DB_TABLE_OPTIONS;\n\n	$q = \"select option_group from $table where module IS NULL and option_group IS NOT NULL group by option_group order by position ASC \";\n	$function_cache_id = __FUNCTION__ . crc32($q);\n	$res1 = false;\n	$res = db_query($q, $cache_id = $function_cache_id, $cache_group = 'options/global');\n	if (is_array($res) and !empty($res)) {\n		$res1 = array();\n		foreach ($res as $item) {\n			$res1[] = $item['option_group'];\n		}\n	}\n	return $res1;\n}\n\nfunction get_options($params = '') {\n\n	if (is_string($params)) {\n		$params = parse_str($params, $params2);\n		$params = $params2;\n		extract($params);\n	}\n\n	$data = $params;\n	$table = MW_DB_TABLE_OPTIONS;\n	//  $data['debug'] = 1000;\n	if (!isset($data['limit'])) {\n		$data['limit'] = 1000;\n	}\n	$get = db_get($table, $data, $cache_group = 'options/global');\n\n	if (!empty($get)) {\n		foreach ($get as $key => $value) {\n			if (isset($get[$key]['field_values']) and $get[$key]['field_values'] != false) {\n				$get[$key]['field_values'] = unserialize(base64_decode($get[$key]['field_values']));\n			}\n		}\n	}\n\n	return $get;\n}\n\nif (is_admin() != false) {\n	api_expose('save_option');\n}\n\nfunction save_option($data) {\n	$is_admin = is_admin();\n\n	// p($_POST);\n	$option_group = false;\n	if (isarr($data)) {\n\n		if (isset($data['for_module_id']) and $data['for_module_id'] != false) {\n			//$data['option_group'] = $data['for_module_id'];\n			if (isset($data['id'])) {\n				//	unset($data['id']);\n			}\n		}\n\n		if (strval($data['option_key']) != '') {\n			if (strstr($data['option_key'], '|for_module|')) {\n				$ok1 = explode('|for_module|', $data['option_key']);\n				if (isset($ok1[0])) {\n					$data['option_key'] = $ok1[0];\n				}\n				if (isset($ok1[1])) {\n					$data['module'] = $ok1[1];\n\n					if (isset($data['id']) and intval($data['id']) > 0) {\n\n						$chck = get_options('limit=1&module=' . $data['module'] . '&option_key=' . $data['option_key']);\n						if (isset($chck[0]) and isset($chck[0]['id'])) {\n\n							$data['id'] = $chck[0]['id'];\n						} else {\n\n							$table = MW_DB_TABLE_OPTIONS;\n							$copy = db_copy_by_id($table, $data['id']);\n							$data['id'] = $copy;\n						}\n\n					}\n				}\n\n				//d($ok1);\n			}\n		}\n\n		if (!isset($data['id']) or intval($data['id']) == 0) {\n			if (isset($data['option_key']) and isset($data['option_group']) and trim($data['option_group']) != '') {\n				$option_group = $data['option_group'];\n\n				delete_option_by_key($data['option_key'], $data['option_group']);\n			}\n		}\n		if (isset($data['field_values']) and $data['field_values'] != false) {\n			$data['field_values'] = base64_encode(serialize($data['field_values']));\n		}\n\n		//}\n		if (strval($data['option_key']) != '') {\n\n			$table = MW_DB_TABLE_OPTIONS;\n			if (isset($data['option_group']) and strval($data['option_group']) == '') {\n\n				unset($data['option_group']);\n			}\n\n			//  $data ['debug'] = 1;\n			$save = save_data($table, $data);\n\n			if ($option_group != false) {\n\n				$cache_group = 'options/' . $option_group;\n				cache_clean_group($cache_group);\n			} else {\n				$cache_group = 'options/' . 'global';\n				cache_clean_group($cache_group);\n			}\n\n			if (isset($data['id']) and intval($data['id']) > 0) {\n\n				$opt = get_option_by_id($data['id']);\n\n				if (isset($opt['option_group'])) {\n					$cache_group = 'options/' . $opt['option_group'];\n					cache_clean_group($cache_group);\n				}\n				$cache_group = 'options/' . intval($data['id']);\n				cache_clean_group($cache_group);\n			}\n			//d($cache_group);\n			//\n			//            if (isset($data['id'])) {\n			//                $cache_group = 'options/' . $data['id'];\n			//                cache_clean_group($cache_group);\n			//            }\n			//            if (isset($data['module'])) {\n			//                $cache_group = 'options/' . $data['module'];\n			//                cache_clean_group($cache_group);\n			//            }\n			//\n			//\n			//            if (isset($data['data-option-group'])) {\n			//                $cache_group = 'options/' . $data['data-option-group'];\n			//                cache_clean_group($cache_group);\n			//            }\n			//            if (isset($data['option-group'])) {\n			//                $cache_group = 'options/' . $data['option-group'];\n			//                cache_clean_group($cache_group);\n			//            }\n			//            if (isset($data['data-module'])) {\n			//                $cache_group = 'options/' . $data['data-module'];\n			//                cache_clean_group($cache_group);\n			//            }\n			//            if (isset($data['option_key'])) {\n			//                $cache_group = 'options/' . $data['option_key'];\n			//                cache_clean_group($cache_group);\n			//            }\n\n			cache_clean_group('options/global');\n\n			return $save;\n		}\n	}\n}\n\nfunction delete_option_by_key($key, $option_group = false, $module_id = false) {\n	$key = db_escape_string($key);\n\n	$table = MW_DB_TABLE_OPTIONS;\n	$option_group_q1 = '';\n	if ($option_group != false) {\n		$option_group = db_escape_string($option_group);\n		$option_group_q1 = \"and option_group='{$option_group}'\";\n	}\n	$module_id_q1 = '';\n	if ($module_id != false) {\n		$module_id = db_escape_string($module_id);\n		$module_id_q1 = \"and module='{$module_id}'\";\n	}\n\n	// $save = $this->saveData ( $table, $data );\n	$q = \"delete from $table where option_key='$key' $option_group_q1 $module_id_q1 \";\n\n	db_q($q);\n	cache_clean_group('options');\n	return true;\n}\n\n\n",
			"file": "application/functions/options.php",
			"file_size": 13761,
			"file_write_time": 129995998275603925,
			"settings":
			{
				"buffer_size": 13285,
				"line_ending": "Windows"
			}
		},
		{
			"file": "userfiles/modules/shop/functions.php",
			"settings":
			{
				"buffer_size": 25410,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 311.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"doic",
				"DocBlockr: Decorate line comment"
			],
			[
				"doc",
				"DocBlockr: Reparse comment block"
			],
			[
				"Tidy PHP",
				"Tidy PHP"
			],
			[
				"if",
				"Snippet: if …"
			],
			[
				"fore",
				"Snippet: foreach …"
			]
		],
		"width": 536.0
	},
	"console":
	{
		"height": 684.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/1k/userfiles/modules/shop/checkout/checkout.png",
		"/C/xampp/htdocs/1k/application/functions/cart.php",
		"/C/xampp/htdocs/1k/application/functions.php",
		"/C/xampp/htdocs/1k/userfiles/templates/lab/css/docs.css",
		"/C/Users/peter/AppData/Roaming/Sublime Text 2/Packages/PHP/PHPDoc-class.sublime-snippet",
		"/C/Users/peter/AppData/Roaming/Sublime Text 2/Packages/PHP/php.sublime-snippet",
		"/C/xampp/htdocs/1k/userfiles/modules/pictures/pictures.js",
		"/C/Users/peter/AppData/Roaming/Sublime Text 2/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/xampp/htdocs/1k/userfiles/modules/shop/payments/admin.php",
		"/C/Users/peter/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/peter/AppData/Roaming/Sublime Text 2/Packages/PhpTidy/PhpTidy.sublime-settings",
		"/C/Users/peter/AppData/Roaming/Sublime Text 2/Packages/User/PhpTidy.sublime-settings",
		"/C/xampp/htdocs/1k/userfiles/modules/pictures/index.php",
		"/C/xampp/htdocs/1k/userfiles/modules/pictures/templates/black.php",
		"/C/xampp/htdocs/1k/userfiles/modules/pictures/templates/default.php",
		"/C/xampp/htdocs/digi/system/application/models/content_model.php",
		"/C/xampp/htdocs/digi/userfiles/templates/jobs/layouts/dashboard/my-posts.php",
		"/C/xampp/htdocs/digi/userfiles/modules/posts/views/add.php",
		"/C/xampp/htdocs/digi/system/application/functions/mw_functions.php",
		"/C/xampp/htdocs/digi/system/application/controllers/api/content.php",
		"/C/xampp/htdocs/digi/userfiles/modules/posts/list.php",
		"/C/xampp/htdocs/digi/userfiles/templates/jobs/css/styles.css",
		"/C/ftp.bat",
		"/M/aloha-imageplugin/src/at.tapo.aloha.plugins.Image/plugin.js",
		"/M/emsproxy.php",
		"/C/xampp/htdocs/digi/system/application/models/taxonomy_model.php",
		"/C/xampp/htdocs/digi/userfiles/modules/admin/pages/choose_category.php",
		"/C/xampp/htdocs/digi/userfiles/modules/admin/content/category_selector.php",
		"/C/Users/peter/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/xampp/htdocs/digi/userfiles/modules/posts/add.php",
		"/C/xampp/htdocs/digi/1.sublime-project",
		"/C/xampp/htdocs/digi/surl.php"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"check",
			"@che",
			"@ch",
			"get_o",
			"profile_blk",
			"profile_blk ",
			"contentpanel",
			"ctrl+b",
			"side",
			"showResponse",
			"redirect_on_success",
			"post_save",
			"bind_cat_sel_fields",
			"get_page_for_category",
			"content_pingServersWithNewContent"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "userfiles/modules/shop/checkout/index.php",
					"settings":
					{
						"buffer_size": 1161,
						"regions":
						{
						},
						"selection":
						[
							[
								660,
								660
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "userfiles/modules/shop/payments/index.php",
					"settings":
					{
						"buffer_size": 1038,
						"regions":
						{
						},
						"selection":
						[
							[
								448,
								448
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "application/functions/options.php",
					"settings":
					{
						"buffer_size": 13285,
						"regions":
						{
						},
						"selection":
						[
							[
								7043,
								7043
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5196.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "userfiles/modules/shop/functions.php",
					"settings":
					{
						"buffer_size": 25410,
						"regions":
						{
						},
						"selection":
						[
							[
								74,
								74
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"shop/f",
				"userfiles/modules/shop/functions.php"
			],
			[
				"func",
				"application/functions.php"
			],
			[
				"pictures",
				"userfiles/modules/pictures/pictures.js"
			],
			[
				"shop/payme",
				"userfiles/modules/shop/payments/admin.php"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 303.0,
	"status_bar_visible": true
}
